@model Greennit.Models.ArticleAndComments

    @helper displayComment(int replyToID) {
List<Greennit.Models.Comment> replyList = Model.CommentsList.FindAll(c => c.RepliesTo == replyToID);
foreach (var currentComment in replyList)
{
    <div class="commentOuter">
        <div class="commentInner">
            @Html.ActionLink("+", "UpComment", new { id = currentComment.ID }, new { @class = "btn btn-success", @style = "width: 34px; text-align: center; margin: auto 0" })
            <span>@(currentComment.UpVotes - currentComment.DownVotes)</span>
            @Html.ActionLink("-", "DownComment", new { id = currentComment.ID }, new { @class = "btn btn-danger", @style = "width: 34px; text-align: center; margin: auto 0" })
            <span>@currentComment.Author:</span>
            <span class="commentText">@currentComment.Text</span>
            <a class="replyLink" id="showReply@(currentComment.ID)" value="@(currentComment.ID)">Reply</a>
            <div class="commentReplyBox" style="display:none;" id="reply@(currentComment.ID)">
                @*@Html.Partial("_NewComment")*@
                @*@(Html.RenderAction("_NewComment", "Articles", new { repliesTo = currentComment.ID, articleID = currentComment.ArticleID }))*@
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <span class="form-horizontal">
        @Html.EditorFor(model => model.Comment.Text, new { htmlAttributes = new { @class = "commentText form-control", @style = "display:inline-block" } })
        <span class="hidden">
            @Html.EditorFor(model => model.Comment.Author, new { htmlAttributes = new { @class = "commentAuthor form-control" } })
            @Html.EditorFor(model => model.Comment.ArticleID, new { htmlAttributes = new { @class = "commentArticleID form-control" } })
            @Html.EditorFor(model => model.Comment.RepliesTo, new { htmlAttributes = new { @class = "commentRepliesTo form-control" } })
        </span>
        <input style="display:inline-block" type="submit" value="Post" class="btn btn-default" />
    </span>
}
            </div>
            <script>
                document.getElementById("showReply@(currentComment.ID)").addEventListener("click", function () {
                    if ($("#reply@(currentComment.ID)").css('display') == "none") {
                        $(".commentReplyBox").css('display','none');
                        $("#reply@(currentComment.ID)").css('display', 'block');
                        $('.commentRepliesTo').val('@currentComment.ID');
                        $('.commentAuthor').val('@ViewContext.RouteData.Values["user"]');
                        $('.commentArticleID').val('@ViewContext.RouteData.Values["id"]');
                    } else {
                        $(".commentReplyBox").css('display', 'none');
                    }
                })
            </script>
        </div>
        @displayComment(currentComment.ID)
    </div>
            }
    }
    @displayComment(0)
    <div class="commentOuter">
        <div class="commentInner" id="innerNewComment">
            <span>@ViewContext.RouteData.Values["user"]:</span>
            <a class="replyLink" id="showReply0" value="0">New Comment</a>
            <span class="commentReplyBox" style="display:none;" id="reply0">
                @*@Html.Partial("_NewComment")*@
                @*@{Html.RenderAction("_NewComment", "Articles", new { repliesTo = 0, articleID = Model.Article.ID });}*@
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <span class="form-horizontal">
        @Html.EditorFor(model => model.Comment.Text, new { htmlAttributes = new { @class = "commentText form-control", @style = "display:inline-block" } })
        <span class="hidden">
            @Html.EditorFor(model => model.Comment.Author, new { htmlAttributes = new { @class = "commentAuthor form-control" } })
            @Html.EditorFor(model => model.Comment.ArticleID, new { htmlAttributes = new { @class = "commentArticleID form-control" } })
            @Html.EditorFor(model => model.Comment.RepliesTo, new { htmlAttributes = new { @class = "commentRepliesTo form-control" } })
        </span>
        <input style="display:inline-block" type="submit" value="Post" class="btn btn-default" />
    </span>
        }
    </span>
            <script>
                document.getElementById("showReply0").addEventListener("click", function () {
                    if ($("#reply0").css('display') == "none") {
                        $(".commentReplyBox").css('display','none');
                        $("#reply0").css('display', 'block');
                        $('.commentRepliesTo').val(0);
                        $('.commentAuthor').val('@ViewContext.RouteData.Values["user"]');
                        $('.commentArticleID').val('@ViewContext.RouteData.Values["id"]');
                    } else {
                        $(".commentReplyBox").css('display', 'none');
                    }
                })
            </script>
        </div>
    </div>